import '/sys'
import '/builtins'


except
  err => import '/dg/addon/readline'
  err is None =>
    import '/sys'
    import '/builtins'

    _history = list!
    _history_prev = state ->
      i = state.cache.get 'history' -1
      if i > (-len _history) =>
        state = state.erase  0 $ len state.buffer
        state = state.insert 0 $ _history !! (i - 1)
        state.cache !! 'history' = i - 1
      state

    _history_next = state ->
      i = state.cache.get 'history' -1
      i = state.cache.get 'history' -1
      if i < -1 =>
        state = state.erase  0 $ len state.buffer
        state = state.insert 0 $ _history !! (i + 1)
        state.cache !! 'history' = i + 1
      state

    _Readline = subclass readline.Readline where
      __init__ = tty ~>
        readline.Readline.__init__ self tty
        @bindings = dict @bindings
        @bindings !! readline.Key.UP   = _history_prev
        @bindings !! readline.Key.DOWN = _history_next
        None

    builtins.input = prompt ->
      _reader = _Readline $ readline.Teletype sys.stdin sys.stdout
      _history.append ''
      _history !! -1 = _reader.input prompt


sys.displayhook = import 'displayhook'
sys.excepthook  = import 'excepthook'
sys.ret         = '  ' + (import 'colored').green  ' = '
sys.ps1         = 'dg' + (import 'colored').yellow ' $ '
sys.ps2         = '  ' + (import 'colored').yellow ' | '
builtins._ = None
