cinit = parse.it '''
# class NS initialization
# :param:`data`:: locals
# :param:`name`:: qualified name (utterly broken)
# :param:`target`:: where to store everything
target.update data
target.update $ dict __module__: __name__ __qualname__: name
'''


#
# subclass A B metaclass: C where ...
#
# Create a class with current locals as its attributes.
#
PREFIX !! 'subclass' = (self f args) ->
  code = CodeGenerator (self.child_name '<class>') True (list' 'data' 'name' 'target') cell: self
  code.loadop 'RETURN_VALUE' cinit delta: 0

  self.loadop 'LOAD_BUILD_CLASS' delta: 1
  self.append 'LOAD_GLOBAL'  'bind'         delta:  1
  self.make_function code tuple! dict!
  self.append 'LOAD_GLOBAL'  'locals'       delta:  1
  self.append 'CALL_FUNCTION' 0             delta:  0
  self.append 'LOAD_CONST'   code.qualname  delta:  1
  self.append 'CALL_FUNCTION' 3             delta: -3
  self.nativecall code.name args 2 False
