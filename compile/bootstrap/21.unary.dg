INFIXL !! '!' = self _ q -> self.call q
INFIXR !! '!' = self f _ -> syntax.error 'this operator is postfix' f
PREFIX !! '!' = self f _ -> syntax.error 'this operator is unary' f

PREFIX !! '~' = self f _ -> syntax.error 'this operator is unary' f
INFIXL !! '~' = self f _ -> syntax.error 'this operator is prefix' f
INFIXR !! '~' = self _ q -> self.loadop 'UNARY_INVERT'   q delta: 1
INFIXR !! '-' = self _ q -> self.loadop 'UNARY_NEGATIVE' q delta: 1

PREFIX !! '@' = self f _ -> syntax.error 'this operator is unary'  f
INFIXL !! '@' = self f _ -> syntax.error 'this operator is prefix' f
INFIXR !! '@' = self f q -> (PREFIX !! '.') self f ((parse.Link 'self').after f, q)

INFIXL !! '->' = self f q -> self.function q ((parse.Constant None).after f)
INFIXR !! '->' = self f q -> self.function ((parse.Constant None).after f) q

INFIXL !! '~>' = self f q -> (PREFIX !! '~>') self f (q, (parse.Constant None).after f)
INFIXR !! '~>' = self f q -> (PREFIX !! '~>') self f ((parse.Constant None).after f, q)
