PREFIX !! 'not' = (self f args) -> self.loadop 'UNARY_NOT' (ensure f args 1 1 !! 0) delta: 1

INFIXR !! ';' = (self f _) -> parse.syntax.error 'put semicolon on the right side, please' f
INFIXR !! '!' = (self f _) -> parse.syntax.error 'use "not"' f
INFIXL !! '~' = (self f _) -> parse.syntax.error 'this operator is unary' f

INFIXL !! ';' = (self _ q) -> self.loadop 'RETURN_VALUE' None q delta: 1
INFIXL !! '!' = (self _ q) -> self.call q

INFIXR !! '~' = (self _ args) ->
  self.loadcall args
  self.loadop 'UNARY_INVERT' delta: 0

INFIXR !! '-' = (self _ args) ->
  self.loadcall args
  self.loadop 'UNARY_NEGATIVE' delta: 0
