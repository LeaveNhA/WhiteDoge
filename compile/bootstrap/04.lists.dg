..compile      = import:
..parse.tree   = import:
..parse.syntax = import:


list_s  = x ->
  q = parse.syntax.ST_TUPLE x None unless x.closed else q = None
  q = parse.syntax.ST_BREAK x if q is None
  list: if x :: parse.tree.Constant and x.value is None else q


compile.r.builtins !! '[]' = (self, x) ->
  self.opcode 'BUILD_LIST' (*): (list_s x) delta: 1


compile.r.builtins !! '{}' = (self, x) ->
  # FIXME should have some way of defining dicts here.
  # The key-value pairing should be done with an operator that has
  # higher priority than `,`, or else `{ a R b, c R d }` won't parse
  # as expected.
  # (Another option is to use a different kind of parentheses.)
  # (Or some kind of flags.)
  self.opcode 'BUILD_SET' (*): (list_s x) delta: 1
